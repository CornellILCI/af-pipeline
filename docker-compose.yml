#docker-compose.yaml
#this docker-compose is intended for dev/local setup
version: "3.4"
volumes:
  afdb_volume:

services:
  database:
    image: postgres:9.6-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - type: volume
        source: afdb_volume
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgres
        target: /docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=postgres

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"
      - "15672:15672"
  
  api:
    build:
      context: ./af-jobs-api
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      - C_FORCE_ROOT=true
      - BROKER=amqp://admin:mypass@rabbitmq:5672
      - AFDB_URL=postgresql://postgres:postgres@database:5432/afdb
    restart: 'yes'
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - database
  
  worker:
    build:
      context: ./af-task-orchestrator
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      - C_FORCE_ROOT=true
      - BROKER=amqp://admin:mypass@rabbitmq:5672
      - BACKEND=rpc://
      - AFDB_URL=postgresql://postgres:postgres@database:5432/afdb
      - B4R_API_BASE_URL=https://b4rapi-uat.ebsproject.org/v3/
      - B4R_API_TOKEN=
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - database

  liquibase:
    image: liquibase/liquibase:3.10.3
    restart: 'no'
    depends_on: 
      - database
    volumes:
      - type: bind
        source: ./db
        target: /db/
    working_dir: /db/build/liquibase/
    command: ./wait_for_postgres_then_init.sh
      


  # beat:
  #   build:
  #     context: ./orchestrator
  #     dockerfile: Dockerfile
  #   image: *img
  #   command: [celery, beat, --app=worker.app, --loglevel=INFO]
  #   depends_on:
  #     - rabbitmq
  #   restart: 'no'
  #   volumes:
  #     - ./app:/app
      
  