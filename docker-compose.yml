#docker-compose.yaml
#this docker-compose is intended for dev/local setup
version: "3.4"
volumes:
  afdb_volume:
  af_data_volume:

services:
  database:
    image: postgres:9.6-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: afdb_volume
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgres
        target: /docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - 5672
      - 15672
  
  api:
    build:
      context: ./af-jobs-api
      dockerfile: Dockerfile
      network: host
    working_dir: /app
    volumes:
      - af_data_volume:/data/
    environment:
      - C_FORCE_ROOT=true
      - BROKER=amqp://admin:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - AFDB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/afdb
      - AFAPI_ALLOWABLE_ORIGINS=*
      - BA_DATA_DIR=/data/
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - database
  
  worker:
    build:
      context: ./af-task-orchestrator
      dockerfile: Dockerfile
      network: host
    working_dir: /app
    volumes:
      - af_data_volume:/data/
    environment:
      - C_FORCE_ROOT=true
      - BROKER=amqp://admin:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - BACKEND=rpc://
      - AFDB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/afdb
      - BA_DATA_DIR=/data/
      - ASREML_ACTIVATION_CODE=${ASREML_ACTIVATION_CODE}
      - ASREML_SEATS=${ASREML_SEATS}
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - database

  liquibase:
    image: liquibase/liquibase:3.10.3
    restart: 'no'
    depends_on: 
      - database
    volumes:
      - type: bind
        source: ./db
        target: /db/
    working_dir: /db/build/liquibase/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    command: ./wait_for_postgres_then_init.sh
